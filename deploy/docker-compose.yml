version: '3.4'
services:
  server:
    build:
      dockerfile: deploy/Dockerfile
      context: ..
    container_name: togetherness_server
    environment:
      - DATABASE_URL=postgres://togetherness:Edinenie2@db/togetherness?sslmode=disable
      - TOGETHERNESS_IP=0.0.0.0
      - TOGETHERNESS_PORT=5000
      - FRONT_DIR=/srv/front
      - ADMIN_PASSWORD=changeme
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5000/"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 3
    # depends_on:
    #   db:
    #     condition: service_healthy
    networks:
      - togetherness
  togetherness_caddy:
    image: caddy:alpine
    container_name: togetherness_caddy
    ports:
      - "0.0.0.0:5000:5000"
      - "0.0.0.0:443:443"
    networks:
      - togetherness
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ../target/togetherness_caddy/data:/data
      - ../target/togetherness_caddy/config:/config
  # db:
  #   image: postgres:latest
  #   container_name: togetherness_db
  #   environment:
  #     - POSTGRES_DB=togetherness
  #     - POSTGRES_USER=togetherness
  #     - POSTGRES_PASSWORD=Edinenie2
  #   healthcheck:
  #     test: [ "CMD", "pg_isready", "-U", "togetherness" ]
  #     start_period: 20s
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   networks:
  #     - togetherness
  #   volumes:
  #     - ../target/togetherness_db:/var/lib/postgresql/data
  # pgadmin:
  #   build:
  #     dockerfile: Dockerfile-pgadmin
  #     context: .
  #   container_name: togetherness_pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=togetherness@example.com
  #     - PGADMIN_DEFAULT_PASSWORD=Edinenie2
  #     - PGADMIN_SERVER_JSON_FILE=/pgadmin4/pgadmin-servers.json
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "wget",
  #         "-q",
  #         "--spider",
  #         "http://localhost:80/"
  #       ]
  #     start_period: 20s
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - togetherness
  #   ports:
  #     - "0.0.0.0:8081:80"

networks:
  togetherness:
